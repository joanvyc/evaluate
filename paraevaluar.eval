#!/bin/bash

source paraevaluar.utils 

function create_omp {
	if eval $OMP_ENABLED;
	then
		for base in ${JOBS_DIR}/*;
		do
			for i in ${OMP_THREADS_array};
			do
				cp -r ${base} ${base}-${i}omp;
				sed -i "s|\(#SBATCH --cpus-per-task\).*|\1 ${i}|g" ${base}-${i}omp;
			done				
			\rm -f ${base};
		done
	fi
}

function create_mpi {
	if eval $MPI_ENABLED
	then
		for base in ${JOBS_DIR}/*;
		do
			for i in ${MPI_RANKS_array};
			do
				cp -r ${base} ${base}-${i}mpi;
				sed -i "s|\(#SBATCH --ntasks\).*|\1 ${i}|g" ${base}-${i}mpi;
			done				
			\rm -f ${base};
		done
	fi
}

function create_input {
	if eval $INPUT_ENABLED;
	then
		cp ${PROJECT_NAME}/base ${JOBS_DIR}/$( basename ${INPUT} | rev | cut -d. -f2- | rev );
	else
		INPUT="base";
		cp ${PROJECT_NAME}/base ${JOBS_DIR}/${INPUT};
	fi
}

function complete_and_run {
	for i in ${JOBS_DIR}/*;
	do
		mkdir -p `basename $i`;
		cp ${i} jobscript.sh;
		sbatch jobscript.sh;
	done
}

create_input;
create_mpi;
create_omp;
#complete_and_run;
